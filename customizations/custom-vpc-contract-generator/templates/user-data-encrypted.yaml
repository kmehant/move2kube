{{- define "envTemplate"}}type: env
logging:
  logDNA:
    hostname: {{ .LogHostName }}
    ingestionKey: {{ .IngestionKey }}
    port: {{ .LogPort }}
volumes:
  {{- range $k, $v := .EnvVolumes}}
  {{$k}}:
    {{- range $vk, $vv := $v}}
    {{$vk}}: {{$vv}}
    {{- end}}
  {{- end}}
{{- end}}
{{- define "workloadTemplate"}}type: workload
auths:
  {{- range $k, $v := .Auths}}
  {{$k}}:
    {{- range $vk, $vv := $v}}
    {{$vk}}: {{$vv}}
    {{- end}}
  {{- end}}
compose:
  archive: {{ .ComposeArchive }}
images:
  dct:
    {{- range $k, $v := .Images}}
    {{$k}}:
      {{- range $vk, $vv := $v}}
      {{$vk}}: {{$vv}}
      {{- end}}
    {{- end}}
volumes:
  {{- range $k, $v := .WorkloadVolumes}}
  {{$k}}:
    {{- range $vk, $vv := $v}}
    {{$vk}}: {{$vv}}
    {{- end}}
  {{- end}}
env:
  {{- range $vk, $vv := .WorkloadEnvs}}
  {{$vk}}: {{$vv}}
  {{- end}}
{{- end}}{{- if .EnvPass}}env: "hyper-protect-basic.{{rsaUtlEnc "" .EnvPass | b64enc}}.
  {{- $envData := execTpl "envTemplate" .}}
  {{- aesEnc .EnvPass $envData | b64enc}}"
{{- end}}
{{- if .WorkloadPass}}
workload: "hyper-protect-basic.{{rsaUtlEnc "" .WorkloadPass | b64enc}}.
  {{- $workloadData := execTpl "workloadTemplate" .}}
  {{- aesEnc .WorkloadPass $workloadData | b64enc}}"
{{- end}}
